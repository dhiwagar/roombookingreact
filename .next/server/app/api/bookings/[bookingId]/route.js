"use strict";(()=>{var e={};e.id=536,e.ids=[536],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2319:(e,t,n)=>{n.r(t),n.d(t,{originalPathname:()=>y,patchFetch:()=>f,requestAsyncStorage:()=>k,routeModule:()=>g,serverHooks:()=>h,staticGenerationAsyncStorage:()=>b});var r={};n.r(r),n.d(r,{DELETE:()=>l,GET:()=>m,PUT:()=>p});var o=n(9303),i=n(8716),a=n(670),s=n(7070),u=n(2021),d=n(3431),c=n(3748);async function m(e,{params:t}){try{await (0,u.Z)();let e=await d.Z.findOne({bookingId:t.bookingId});if(!e)return s.NextResponse.json({success:!1,error:"Booking not found"},{status:404});let n=await c.Z.findOne({roomId:e.roomId});return s.NextResponse.json({success:!0,data:e,room:n||null})}catch(e){return console.error("Error fetching booking:",e),s.NextResponse.json({success:!1,error:"Failed to fetch booking"},{status:500})}}async function p(e,{params:t}){try{await (0,u.Z)();let{status:n,paymentStatus:r,paymentMethod:o}=await e.json(),i={};n&&(i.status=n),r&&(i.paymentStatus=r),o&&(i.paymentMethod=o);let a=await d.Z.findOneAndUpdate({bookingId:t.bookingId},i,{new:!0,runValidators:!0});if(!a)return s.NextResponse.json({success:!1,error:"Booking not found"},{status:404});return s.NextResponse.json({success:!0,data:a})}catch(e){return console.error("Error updating booking:",e),s.NextResponse.json({success:!1,error:"Failed to update booking"},{status:500})}}async function l(e,{params:t}){try{await (0,u.Z)();let e=await d.Z.findOneAndUpdate({bookingId:t.bookingId},{status:"cancelled"},{new:!0});if(!e)return s.NextResponse.json({success:!1,error:"Booking not found"},{status:404});return s.NextResponse.json({success:!0,message:"Booking cancelled successfully",data:e})}catch(e){return console.error("Error cancelling booking:",e),s.NextResponse.json({success:!1,error:"Failed to cancel booking"},{status:500})}}let g=new o.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/bookings/[bookingId]/route",pathname:"/api/bookings/[bookingId]",filename:"route",bundlePath:"app/api/bookings/[bookingId]/route"},resolvedPagePath:"C:\\Users\\kepre\\Downloads\\room-booking\\room-booking\\app\\api\\bookings\\[bookingId]\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:k,staticGenerationAsyncStorage:b,serverHooks:h}=g,y="/api/bookings/[bookingId]/route";function f(){return(0,a.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:b})}},2021:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(1185),o=n.n(r);let i=process.env.MONGODB_URI||"mongodb://localhost:27017/villa-shanti";if(!i)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let a=global.mongoose;a||(a=global.mongoose={conn:null,promise:null});let s=async function(){if(a.conn)return a.conn;a.promise||(a.promise=o().connect(i,{bufferCommands:!1}).then(e=>e));try{a.conn=await a.promise}catch(e){throw a.promise=null,e}return a.conn}},3431:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(1185),o=n.n(r);let i=new r.Schema({bookingId:{type:String,required:!0,unique:!0,trim:!0},name:{type:String,required:!0,trim:!0,maxlength:100},email:{type:String,required:!0,trim:!0,lowercase:!0,match:[/^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$/,"Please enter a valid email"]},phone:{type:String,required:!0,trim:!0,match:[/^[\+]?[1-9][\d]{0,15}$/,"Please enter a valid phone number"]},roomId:{type:String,required:!0,ref:"Room"},checkInDate:{type:Date,required:!0,validate:{validator:function(e){return e>=new Date},message:"Check-in date must be in the future"}},checkOutDate:{type:Date,required:!0,validate:{validator:function(e){return e>this.checkInDate},message:"Check-out date must be after check-in date"}},numberOfGuests:{type:Number,required:!0,min:1,max:10},specialRequest:{type:String,trim:!0,maxlength:500},totalAmount:{type:Number,required:!0,min:0},status:{type:String,enum:["pending","confirmed","cancelled","completed"],default:"pending"},paymentStatus:{type:String,enum:["pending","paid","failed","refunded"],default:"pending"},paymentMethod:{type:String,trim:!0}},{timestamps:!0});i.index({email:1}),i.index({checkInDate:1,checkOutDate:1}),i.index({status:1}),i.index({createdAt:-1}),i.index({roomId:1,checkInDate:1,checkOutDate:1,status:1});let a=o().models.Booking||o().model("Booking",i)},3748:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(1185),o=n.n(r);let i=new r.Schema({roomId:{type:String,required:!0,unique:!0,trim:!0},name:{type:String,required:!0,trim:!0},type:{type:String,required:!0,enum:["deluxe","suite","premium","standard"]},price:{type:Number,required:!0,min:0},maxGuests:{type:Number,required:!0,min:1,max:10},size:{type:String,required:!0},amenities:[{type:String,trim:!0}],images:[{type:String,trim:!0}],description:{type:String,required:!0,trim:!0},features:[{type:String,trim:!0}],isAvailable:{type:Boolean,default:!0},rating:{type:Number,min:0,max:5,default:4.5}},{timestamps:!0});i.index({type:1}),i.index({price:1}),i.index({isAvailable:1});let a=o().models.Room||o().model("Room",i)}};var t=require("../../../../webpack-runtime.js");t.C(e);var n=e=>t(t.s=e),r=t.X(0,[276,972],()=>n(2319));module.exports=r})();