"use strict";(()=>{var e={};e.id=913,e.ids=[913],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8072:(e,n,r)=>{r.r(n),r.d(n,{originalPathname:()=>h,patchFetch:()=>x,requestAsyncStorage:()=>g,routeModule:()=>p,serverHooks:()=>y,staticGenerationAsyncStorage:()=>f});var t={};r.r(t),r.d(t,{DELETE:()=>l,GET:()=>m,PUT:()=>c});var s=r(9303),o=r(8716),i=r(670),a=r(7070),u=r(2021),d=r(5416);async function m(e,{params:n}){try{await (0,u.Z)();let e=await d.Z.findOne({menuId:n.menuId});if(!e)return a.NextResponse.json({success:!1,error:"Menu not found"},{status:404});return a.NextResponse.json({success:!0,data:e})}catch(e){return console.error("Error fetching menu:",e),a.NextResponse.json({success:!1,error:"Failed to fetch menu"},{status:500})}}async function c(e,{params:n}){try{await (0,u.Z)();let r=await e.json(),t=await d.Z.findOneAndUpdate({menuId:n.menuId},r,{new:!0,runValidators:!0});if(!t)return a.NextResponse.json({success:!1,error:"Menu not found"},{status:404});return a.NextResponse.json({success:!0,data:t})}catch(e){return console.error("Error updating menu:",e),a.NextResponse.json({success:!1,error:"Failed to update menu"},{status:500})}}async function l(e,{params:n}){try{if(await (0,u.Z)(),!await d.Z.findOneAndDelete({menuId:n.menuId}))return a.NextResponse.json({success:!1,error:"Menu not found"},{status:404});return a.NextResponse.json({success:!0,message:"Menu deleted successfully"})}catch(e){return console.error("Error deleting menu:",e),a.NextResponse.json({success:!1,error:"Failed to delete menu"},{status:500})}}let p=new s.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/menus/[menuId]/route",pathname:"/api/menus/[menuId]",filename:"route",bundlePath:"app/api/menus/[menuId]/route"},resolvedPagePath:"C:\\Users\\kepre\\Downloads\\room-booking\\room-booking\\app\\api\\menus\\[menuId]\\route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:g,staticGenerationAsyncStorage:f,serverHooks:y}=p,h="/api/menus/[menuId]/route";function x(){return(0,i.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:f})}},2021:(e,n,r)=>{r.d(n,{Z:()=>a});var t=r(1185),s=r.n(t);let o=process.env.MONGODB_URI||"mongodb://localhost:27017/villa-shanti";if(!o)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let i=global.mongoose;i||(i=global.mongoose={conn:null,promise:null});let a=async function(){if(i.conn)return i.conn;i.promise||(i.promise=s().connect(o,{bufferCommands:!1}).then(e=>e));try{i.conn=await i.promise}catch(e){throw i.promise=null,e}return i.conn}},5416:(e,n,r)=>{r.d(n,{Z:()=>i});var t=r(1185),s=r.n(t);let o=new t.Schema({menuId:{type:String,required:!0,unique:!0,trim:!0},name:{type:String,required:!0,trim:!0,maxlength:100},description:{type:String,required:!0,trim:!0,maxlength:500},price:{type:Number,required:!0,min:0},category:{type:String,required:!0,enum:["appetizers","main-course","desserts","beverages","breakfast","lunch","dinner"]},subcategory:{type:String,trim:!0},image:{type:String,required:!0,trim:!0},isAvailable:{type:Boolean,default:!0},isVegetarian:{type:Boolean,default:!1},isSpicy:{type:Boolean,default:!1},allergens:[{type:String,enum:["dairy","nuts","gluten","eggs","shellfish","soy","fish","wheat"]}],preparationTime:{type:Number,required:!0,min:0,max:120},calories:{type:Number,min:0},ingredients:[{type:String,trim:!0}]},{timestamps:!0});o.index({category:1}),o.index({isAvailable:1}),o.index({isVegetarian:1});let i=s().models.Menu||s().model("Menu",o)}};var n=require("../../../../webpack-runtime.js");n.C(e);var r=e=>n(n.s=e),t=n.X(0,[276,972],()=>r(8072));module.exports=t})();